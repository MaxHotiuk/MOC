@{
    ViewData["Title"] = "Diffie-Hellman Key Exchange";
    var p = TempData["p"] as string;
    var g = TempData["g"] as string;
    var privateKey = TempData["privateKey"] as string;
    var publicKey = TempData["publicKey"] as string;
    var sharedSecret = TempData["sharedSecret"] as string;
    var keyMaterial = TempData["keyMaterial"] as string;
    var encryptedText = TempData["encryptedText"] as string;
    var decryptedText = TempData["decryptedText"] as string;
}

<div class="container">
    <h1 class="mt-4">@ViewData["Title"]</h1>
    <p class="lead">–ü—Ä–æ—Ç–æ–∫–æ–ª –æ–±–º—ñ–Ω—É –∫–ª—é—á–∞–º–∏ –î—ñ—Ñ—Ñ—ñ-–ì–µ–ª–º–∞–Ω–∞</p>

    @if (TempData["SuccessMessage"] != null)
    {
        <div class="alert alert-success">@TempData["SuccessMessage"]</div>
    }
    @if (TempData["ErrorMessage"] != null)
    {
        <div class="alert alert-danger">@TempData["ErrorMessage"]</div>
    }

    <div class="card mb-4">
        <div class="card-header bg-info text-white">
            üîë –Ø–∫ –ø—Ä–∞—Ü—é—î –ø—Ä–æ—Ç–æ–∫–æ–ª –î—ñ—Ñ—Ñ—ñ-–ì–µ–ª–º–∞–Ω–∞
        </div>
        <div class="card-body">
            <p>
                –ü—Ä–æ—Ç–æ–∫–æ–ª –î—ñ—Ñ—Ñ—ñ-–ì–µ–ª–º–∞–Ω–∞ –¥–æ–∑–≤–æ–ª—è—î –¥–≤–æ–º —Å—Ç–æ—Ä–æ–Ω–∞–º —Å–ø—ñ–ª—å–Ω–æ –æ—Ç—Ä–∏–º–∞—Ç–∏ —Å–µ–∫—Ä–µ—Ç–Ω–∏–π –∫–ª—é—á, 
                –≤–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—é—á–∏ –Ω–µ–∑–∞—Ö–∏—â–µ–Ω–∏–π –∫–∞–Ω–∞–ª –∑–≤'—è–∑–∫—É, –±–µ–∑ –ø–æ–ø–µ—Ä–µ–¥–Ω—å–æ–≥–æ –æ–±–º—ñ–Ω—É —Å–µ–∫—Ä–µ—Ç–Ω–æ—é —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—î—é.
            </p>
            <ol>
                <li><strong>–ü–∞—Ä–∞–º–µ—Ç—Ä–∏:</strong> –û–±–∏–¥–≤—ñ —Å—Ç–æ—Ä–æ–Ω–∏ —É–∑–≥–æ–¥–∂—É—é—Ç—å –≤–µ–ª–∏–∫–µ –ø—Ä–æ—Å—Ç–µ —á–∏—Å–ª–æ <code>p</code> —ñ –≥–µ–Ω–µ—Ä–∞—Ç–æ—Ä <code>g</code>.</li>
                <li><strong>–ü—Ä–∏–≤–∞—Ç–Ω—ñ –∫–ª—é—á—ñ:</strong> –ö–æ–∂–Ω–∞ —Å—Ç–æ—Ä–æ–Ω–∞ –≥–µ–Ω–µ—Ä—É—î —Å–≤—ñ–π –ø—Ä–∏–≤–∞—Ç–Ω–∏–π –∫–ª—é—á: <code>a</code> —ñ <code>b</code>.</li>
                <li><strong>–ü—É–±–ª—ñ—á–Ω—ñ –∫–ª—é—á—ñ:</strong> –û–±—á–∏—Å–ª—é—é—Ç—å—Å—è —ñ –æ–±–º—ñ–Ω—é—é—Ç—å—Å—è –ø—É–±–ª—ñ—á–Ω–∏–º–∏ –∫–ª—é—á–∞–º–∏:
                    <ul>
                        <li>–ê–ª—ñ—Å–∞: <code>A = g<sup>a</sup> mod p</code></li>
                        <li>–ë–æ–±: <code>B = g<sup>b</sup> mod p</code></li>
                    </ul>
                </li>
                <li><strong>–°–ø—ñ–ª—å–Ω–∏–π —Å–µ–∫—Ä–µ—Ç:</strong> –û–±–∏–¥–≤—ñ —Å—Ç–æ—Ä–æ–Ω–∏ –æ–±—á–∏—Å–ª—é—é—Ç—å –æ–¥–∏–Ω —ñ —Ç–æ–π —Å–∞–º–∏–π —Å–ø—ñ–ª—å–Ω–∏–π —Å–µ–∫—Ä–µ—Ç:
                    <ul>
                        <li>–ê–ª—ñ—Å–∞: <code>s = B<sup>a</sup> mod p</code></li>
                        <li>–ë–æ–±: <code>s = A<sup>b</sup> mod p</code></li>
                    </ul>
                </li>
                <li><strong>–†–µ–∑—É–ª—å—Ç–∞—Ç:</strong> –û–±–∏–¥–≤—ñ —Å—Ç–æ—Ä–æ–Ω–∏ –º–∞—é—Ç—å –æ–¥–Ω–∞–∫–æ–≤–∏–π —Å–ø—ñ–ª—å–Ω–∏–π —Å–µ–∫—Ä–µ—Ç <code>s = g<sup>ab</sup> mod p</code>, 
                    —è–∫–∏–π –º–æ–∂–Ω–∞ –≤–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É–≤–∞—Ç–∏ —è–∫ –∫–ª—é—á –¥–ª—è —Å–∏–º–µ—Ç—Ä–∏—á–Ω–æ–≥–æ —à–∏—Ñ—Ä—É–≤–∞–Ω–Ω—è.</li>
            </ol>
            <p>
                –ë–µ–∑–ø–µ–∫–∞ –ø—Ä–æ—Ç–æ–∫–æ–ª—É –±–∞–∑—É—î—Ç—å—Å—è –Ω–∞ —Å–∫–ª–∞–¥–Ω–æ—Å—Ç—ñ –æ–±—á–∏—Å–ª–µ–Ω–Ω—è –¥–∏—Å–∫—Ä–µ—Ç–Ω–æ–≥–æ –ª–æ–≥–∞—Ä–∏—Ñ–º–∞.
            </p>
        </div>
    </div>

    <div class="row">
        <div class="col-md-6">
            <div class="card mb-4">
                <div class="card-header">–ì–µ–Ω–µ—Ä–∞—Ü—ñ—è –ø–∞—Ä–∞–º–µ—Ç—Ä—ñ–≤</div>
                <div class="card-body">
                    <form asp-action="GenerateParameters" method="post">
                        <input type="hidden" name="fileId" value="@ViewBag.FileId" />
                        <div class="mb-3">
                            <label for="bitLength" class="form-label">–†–æ–∑–º—ñ—Ä –º–æ–¥—É–ª—è</label>
                            <select id="bitLength" name="bitLength" class="form-select">
                                <option value="16">16 –±—ñ—Ç</option>
                                <option value="32" selected>32 –±—ñ—Ç</option>
                                <option value="64">64 –±—ñ—Ç</option>
                            </select>
                        </div>
                        <button type="submit" class="btn btn-primary w-100">–ì–µ–Ω–µ—Ä—É–≤–∞—Ç–∏ –ø–∞—Ä–∞–º–µ—Ç—Ä–∏</button>
                    </form>
                </div>
            </div>

            <!-- –î–æ–¥–∞–π—Ç–µ —Ü–µ–π –±–ª–æ–∫ –ø—ñ—Å–ª—è –∫–∞—Ä—Ç–∫–∏ "–ì–µ–Ω–µ—Ä–∞—Ü—ñ—è –ø–∞—Ä–∞–º–µ—Ç—Ä—ñ–≤" -->
            <div class="card mb-4">
                <div class="card-header">–ì–µ–Ω–µ—Ä–∞—Ü—ñ—è –∫–ª—é—á—ñ–≤ –∑–∞ —ñ—Å–Ω—É—é—á–∏–º–∏ –ø–∞—Ä–∞–º–µ—Ç—Ä–∞–º–∏</div>
                <div class="card-body">
                    <form asp-action="GenerateWithExistingParameters" method="post">
                        <input type="hidden" name="fileId" value="@ViewBag.FileId" />
                        <div class="mb-3">
                            <label for="existingP" class="form-label">–ú–æ–¥—É–ª—å (p)</label>
                            <input type="text" id="existingP" name="existingP" class="form-control" required>
                        </div>
                        <div class="mb-3">
                            <label for="existingG" class="form-label">–ì–µ–Ω–µ—Ä–∞—Ç–æ—Ä (g)</label>
                            <input type="text" id="existingG" name="existingG" class="form-control" required>
                        </div>
                        <button type="submit" class="btn btn-primary w-100">–ó–≥–µ–Ω–µ—Ä—É–≤–∞—Ç–∏ –∫–ª—é—á—ñ</button>
                    </form>
                </div>
            </div>

            @if (p != null && g != null && privateKey != null && publicKey != null)
            {
                <div class="card mb-4">
                    <div class="card-header">–ó–≥–µ–Ω–µ—Ä–æ–≤–∞–Ω—ñ –ø–∞—Ä–∞–º–µ—Ç—Ä–∏</div>
                    <div class="card-body">
                        <div class="alert alert-warning">
                            –ó–±–µ—Ä—ñ–≥–∞–π—Ç–µ —Å–≤—ñ–π –ø—Ä–∏–≤–∞—Ç–Ω–∏–π –∫–ª—é—á –≤ –±–µ–∑–ø–µ—Ü—ñ. –ù–µ —Ä–æ–∑–≥–æ–ª–æ—à—É–π—Ç–µ –π–æ–≥–æ —ñ–Ω—à–∏–º —Å—Ç–æ—Ä–æ–Ω–∞–º.
                        </div>

                        <div class="mb-3">
                            <label class="form-label">–°–ø—ñ–ª—å–Ω—ñ –ø–∞—Ä–∞–º–µ—Ç—Ä–∏</label>
                            <div class="input-group mb-2">
                                <span class="input-group-text">p</span>
                                <input class="form-control" value="@p" readonly>
                                <button class="btn btn-outline-secondary" type="button" onclick="copy(this)">
                                    üìã
                                </button>
                            </div>
                            <div class="input-group">
                                <span class="input-group-text">g</span>
                                <input class="form-control" value="@g" readonly>
                                <button class="btn btn-outline-secondary" type="button" onclick="copy(this)">
                                    üìã
                                </button>
                            </div>
                        </div>

                        <div class="mb-3">
                            <label class="form-label">–í–∞—à –ø—É–±–ª—ñ—á–Ω–∏–π –∫–ª—é—á (–º–æ–∂–Ω–∞ –ø–æ–¥—ñ–ª–∏—Ç–∏—Å—å)</label>
                            <div class="input-group">
                                <span class="input-group-text">A</span>
                                <input class="form-control" value="@publicKey" readonly>
                                <button class="btn btn-outline-secondary" type="button" onclick="copy(this)">
                                    üìã
                                </button>
                            </div>
                        </div>

                        <div class="mb-3">
                            <label class="form-label">–í–∞—à –ø—Ä–∏–≤–∞—Ç–Ω–∏–π –∫–ª—é—á (—Ç—Ä–∏–º–∞–π—Ç–µ –≤ —Å–µ–∫—Ä–µ—Ç—ñ)</label>
                            <div class="input-group">
                                <span class="input-group-text">a</span>
                                <input class="form-control" value="@privateKey" readonly>
                                <button class="btn btn-outline-secondary" type="button" onclick="copy(this)">
                                    üìã
                                </button>
                            </div>
                        </div>

                        <button class="btn btn-outline-success w-100" onclick="downloadParameters()">–ó–∞–≤–∞–Ω—Ç–∞–∂–∏—Ç–∏ –ø–∞—Ä–∞–º–µ—Ç—Ä–∏ —è–∫ .txt</button>
                    </div>
                </div>
            }
        </div>

        <div class="col-md-6">
            <!-- –û–±—á–∏—Å–ª–µ–Ω–Ω—è —Å–ø—ñ–ª—å–Ω–æ–≥–æ —Å–µ–∫—Ä–µ—Ç–Ω–æ–≥–æ –∫–ª—é—á–∞ -->
            <div class="card mb-4">
                <div class="card-header">–û–±—á–∏—Å–ª–µ–Ω–Ω—è —Å–ø—ñ–ª—å–Ω–æ–≥–æ —Å–µ–∫—Ä–µ—Ç—É</div>
                <div class="card-body">
                    <form asp-action="ComputeSharedSecret" method="post">
                        <input type="hidden" name="fileId" value="@ViewBag.FileId" />
                        <div class="mb-3">
                            <label for="otherPublicKey" class="form-label">–ü—É–±–ª—ñ—á–Ω–∏–π –∫–ª—é—á —ñ–Ω—à–æ—ó —Å—Ç–æ—Ä–æ–Ω–∏ (B)</label>
                            <input type="text" id="otherPublicKey" name="otherPublicKey" class="form-control" required>
                        </div>
                        <div class="mb-3">
                            <label for="privateKey" class="form-label">–í–∞—à –ø—Ä–∏–≤–∞—Ç–Ω–∏–π –∫–ª—é—á (a)</label>
                            <input type="text" id="privateKey" name="privateKey" class="form-control" value="@privateKey" required>
                        </div>
                        <div class="mb-3">
                            <label for="modulus" class="form-label">–ú–æ–¥—É–ª—å (p)</label>
                            <input type="text" id="modulus" name="modulus" class="form-control" value="@p" required>
                        </div>
                        <button type="submit" class="btn btn-success w-100">–û–±—á–∏—Å–ª–∏—Ç–∏ —Å–ø—ñ–ª—å–Ω–∏–π —Å–µ–∫—Ä–µ—Ç</button>
                    </form>
                </div>
            </div>

            @if (sharedSecret != null && keyMaterial != null)
            {
                <div class="card mb-4">
                    <div class="card-header">–°–ø—ñ–ª—å–Ω–∏–π —Å–µ–∫—Ä–µ—Ç–Ω–∏–π –∫–ª—é—á</div>
                    <div class="card-body">
                        <div class="alert alert-info">
                            –°–ø—ñ–ª—å–Ω–∏–π —Å–µ–∫—Ä–µ—Ç —É—Å–ø—ñ—à–Ω–æ –æ–±—á–∏—Å–ª–µ–Ω–æ! –¢–µ–ø–µ—Ä –π–æ–≥–æ –º–æ–∂–Ω–∞ –≤–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É–≤–∞—Ç–∏ –¥–ª—è —à–∏—Ñ—Ä—É–≤–∞–Ω–Ω—è.
                        </div>

                        <div class="mb-3">
                            <label class="form-label">–ö–ª—é—á–æ–≤–∏–π –º–∞—Ç–µ—Ä—ñ–∞–ª (hex)</label>
                            <div class="input-group">
                                <input class="form-control" value="@keyMaterial" readonly>
                                <button class="btn btn-outline-secondary" type="button" onclick="copy(this)">
                                    üìã
                                </button>
                            </div>
                            <small class="text-muted">–¶–µ–π –∫–ª—é—á –º–æ–∂–Ω–∞ –≤–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É–≤–∞—Ç–∏ –¥–ª—è —Å–∏–º–µ—Ç—Ä–∏—á–Ω–æ–≥–æ —à–∏—Ñ—Ä—É–≤–∞–Ω–Ω—è.</small>
                        </div>

                        <button class="btn btn-outline-success w-100" onclick="downloadSharedSecret()">–ó–∞–≤–∞–Ω—Ç–∞–∂–∏—Ç–∏ —Å–ø—ñ–ª—å–Ω–∏–π —Å–µ–∫—Ä–µ—Ç —è–∫ .txt</button>
                    </div>
                </div>
            }

            <!-- –î–æ–¥–∞–π—Ç–µ —Ü–µ–π –±–ª–æ–∫ –ø—ñ—Å–ª—è –∫–∞—Ä—Ç–æ–∫ –∑ –æ–±—á–∏—Å–ª–µ–Ω–Ω—è–º —Å–ø—ñ–ª—å–Ω–æ–≥–æ —Å–µ–∫—Ä–µ—Ç—É -->
            <div class="row mb-4">
                <div class="col-md-6">
                    <div class="card">
                        <div class="card-header bg-success text-white">
                            üîí –®–∏—Ñ—Ä—É–≤–∞–Ω–Ω—è —Ç–µ–∫—Å—Ç—É
                        </div>
                        <div class="card-body">
                            <form asp-action="EncryptText" method="post">
                                <input type="hidden" name="fileId" value="@ViewBag.FileId" />
                                <div class="mb-3">
                                    <label for="keyMaterial" class="form-label">–ö–ª—é—á–æ–≤–∏–π –º–∞—Ç–µ—Ä—ñ–∞–ª (hex)</label>
                                    <input type="text" id="keyMaterial" name="keyMaterial" class="form-control" 
                                        value="@keyMaterial" required>
                                </div>
                                <div class="mb-3">
                                    <label for="plainText" class="form-label">–¢–µ–∫—Å—Ç –¥–ª—è —à–∏—Ñ—Ä—É–≤–∞–Ω–Ω—è</label>
                                    <textarea id="plainText" name="plainText" class="form-control" rows="4" 
                                            placeholder="–í–≤–µ–¥—ñ—Ç—å —Ç–µ–∫—Å—Ç –¥–ª—è —à–∏—Ñ—Ä—É–≤–∞–Ω–Ω—è..." required></textarea>
                                </div>
                                <button type="submit" class="btn btn-success w-100">–ó–∞—à–∏—Ñ—Ä—É–≤–∞—Ç–∏</button>
                            </form>
                            
                            @if (!string.IsNullOrEmpty(encryptedText))
                            {
                                <div class="mt-3">
                                    <label class="form-label">–ó–∞—à–∏—Ñ—Ä–æ–≤–∞–Ω–∏–π —Ç–µ–∫—Å—Ç (Base64)</label>
                                    <div class="input-group">
                                        <textarea class="form-control" rows="3" readonly>@encryptedText</textarea>
                                        <button class="btn btn-outline-secondary" type="button" onclick="copyTextarea(this)">
                                            üìã
                                        </button>
                                    </div>
                                </div>
                            }
                        </div>
                    </div>
                </div>
                
                <div class="col-md-6">
                    <div class="card">
                        <div class="card-header bg-primary text-white">
                            üîì –†–æ–∑—à–∏—Ñ—Ä—É–≤–∞–Ω–Ω—è —Ç–µ–∫—Å—Ç—É
                        </div>
                        <div class="card-body">
                            <form asp-action="DecryptText" method="post">
                                <input type="hidden" name="fileId" value="@ViewBag.FileId" />
                                <div class="mb-3">
                                    <label for="decryptKeyMaterial" class="form-label">–ö–ª—é—á–æ–≤–∏–π –º–∞—Ç–µ—Ä—ñ–∞–ª (hex)</label>
                                    <input type="text" id="decryptKeyMaterial" name="keyMaterial" class="form-control" 
                                        value="@keyMaterial" required>
                                </div>
                                <div class="mb-3">
                                    <label for="cipherText" class="form-label">–ó–∞—à–∏—Ñ—Ä–æ–≤–∞–Ω–∏–π —Ç–µ–∫—Å—Ç (Base64)</label>
                                    <textarea id="cipherText" name="cipherText" class="form-control" rows="4" 
                                            placeholder="–í–≤–µ–¥—ñ—Ç—å –∑–∞—à–∏—Ñ—Ä–æ–≤–∞–Ω–∏–π —Ç–µ–∫—Å—Ç –¥–ª—è —Ä–æ–∑—à–∏—Ñ—Ä—É–≤–∞–Ω–Ω—è..." required></textarea>
                                </div>
                                <button type="submit" class="btn btn-primary w-100">–†–æ–∑—à–∏—Ñ—Ä—É–≤–∞—Ç–∏</button>
                            </form>
                            
                            @if (!string.IsNullOrEmpty(decryptedText))
                            {
                                <div class="mt-3">
                                    <label class="form-label">–†–æ–∑—à–∏—Ñ—Ä–æ–≤–∞–Ω–∏–π —Ç–µ–∫—Å—Ç</label>
                                    <div class="input-group">
                                        <textarea class="form-control" rows="3" readonly>@decryptedText</textarea>
                                        <button class="btn btn-outline-secondary" type="button" onclick="copyTextarea(this)">
                                            üìã
                                        </button>
                                    </div>
                                </div>
                            }
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <!-- File Content -->
    <div class="card mb-4">
        <div class="card-header">–í–º—ñ—Å—Ç —Ñ–∞–π–ª—É</div>
        <div class="card-body">
            <textarea class="form-control" rows="8" readonly>@ViewBag.FileContent</textarea>
        </div>
    </div>

    <a asp-controller="EncryptDecrypt" asp-action="Files" class="btn btn-outline-secondary">
        ‚¨Ö –ù–∞–∑–∞–¥ –¥–æ —Ñ–∞–π–ª—ñ–≤
    </a>
</div>

@section Scripts {
    <script>
        function copy(btn) {
            const input = btn.parentElement.querySelector('input');
            input.select();
            document.execCommand('copy');
            btn.textContent = '‚úÖ';
            setTimeout(() => btn.textContent = 'üìã', 1500);
        }

        function copyTextarea(btn) {
            const textarea = btn.parentElement.querySelector('textarea');
            textarea.select();
            document.execCommand('copy');
            btn.textContent = '‚úÖ';
            setTimeout(() => btn.textContent = 'üìã', 1500);
        }

        function downloadParameters() {
            const p = '@p';
            const g = '@g';
            const publicKey = '@publicKey';
            const privateKey = '@privateKey';

            const content =
                `Diffie-Hellman Parameters\n\n` +
                `Prime Modulus (p):\n${p}\n\n` +
                `Generator (g):\n${g}\n\n` +
                `Public Key (A):\n${publicKey}\n\n` +
                `Private Key (a) - KEEP SECURE:\n${privateKey}`;

            const blob = new Blob([content], { type: 'text/plain' });
            const url = URL.createObjectURL(blob);

            const a = document.createElement('a');
            a.href = url;
            a.download = 'diffie_hellman_parameters.txt';
            a.click();

            URL.revokeObjectURL(url);
        }

        function downloadSharedSecret() {
            const sharedSecret = '@sharedSecret';
            const keyMaterial = '@keyMaterial';

            const content =
                `Diffie-Hellman Shared Secret\n\n` +
                `Raw Shared Secret:\n${sharedSecret}\n\n` +
                `Derived Key Material (hex):\n${keyMaterial}`;

            const blob = new Blob([content], { type: 'text/plain' });
            const url = URL.createObjectURL(blob);

            const a = document.createElement('a');
            a.href = url;
            a.download = 'diffie_hellman_shared_secret.txt';
            a.click();

            URL.revokeObjectURL(url);
        }
    </script>
}